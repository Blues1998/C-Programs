/*
	Program to implement stack using linked list	*/
#include<stdio.h>
#include<stdlib.h>

typedef struct node
{
	int data;
	struct node *link;
}node;
node *top=NULL;

void push();
void pop();
void peek();
void display();

int main()
{
	int ch;
	printf("Stack implementation using Linked list\n\n");
	printf("1.Push\n2.Pop\n3.Display\n4.Peek\n5.Exit\n");
	while(1)
	{
		printf("\nEnter choice: ");
		scanf("%d",&ch);
		switch(ch)
		{
			case 1:
			push();
			break;

			case 2:
			pop();
			break;

			case 3:
			display();
			break;

			case 4:
			peek();
			break;

			case 5:
			exit(1);
			break;

			default:
			printf("Wrong choice!\n\n");
			break;
		}
	}
	return 0;
}
void push()
{
	node* temp = (node*)malloc(sizeof(node));
	printf("Enter data: ");
	scanf("%d",&temp->data);
	temp->link=top;
	top=temp;
}
void pop()
{
	node *temp=top;
	if(top==NULL)
		printf("Stack is underflow!\n\n");
	else
	{
		printf("Deleted element: %d\n\n",temp->data);
		top=top->link;
		free(temp);
	}
}
void display()
{
	node *temp = top;
	if(top==NULL)
		printf("Stack is empty!!\n\n");
	else
	{
		while(temp!=NULL)
		{
			printf("| %d |\n",temp->data);
			temp=temp->link;
		}
		printf("------");
	}
}
void peek()
{
	if(top==NULL)
		printf("Stack is empty!\n\n");
	else
		printf("Top element: %d\n\n",top->data);
}
